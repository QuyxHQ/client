;;
;; Header files for UNftCollection
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_comment
tuple __tact_string_builder_start_comment() inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $RoyaltyParams$_store
builder $RoyaltyParams$_store(builder build_0, (int, int, slice) v) inline;

;; $RoyaltyParams$_load
(slice, ((int, int, slice))) $RoyaltyParams$_load(slice sc_0) inline;

;; $GetCardLinkStatus$_load
(slice, ((int, int, slice, cell))) $GetCardLinkStatus$_load(slice sc_0) inline;

;; $ReportCardLinkStatus$_store
builder $ReportCardLinkStatus$_store(builder build_0, (int, int, int, slice, cell) v) inline;

;; $ReportCardLinkStatus$_store_cell
cell $ReportCardLinkStatus$_store_cell((int, int, int, slice, cell) v) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetRoyaltyParams$_load
(slice, ((int))) $GetRoyaltyParams$_load(slice sc_0) inline;

;; $ReportRoyaltyParams$_store
builder $ReportRoyaltyParams$_store(builder build_0, (int, int, int, slice) v) inline;

;; $ReportRoyaltyParams$_store_cell
cell $ReportRoyaltyParams$_store_cell((int, int, int, slice) v) inline;

;; $UpdateUsernameLinkedStatus$_load
(slice, ((int, int, slice, int))) $UpdateUsernameLinkedStatus$_load(slice sc_0) inline;

;; $UpdateAllowedContract$_load
(slice, ((slice))) $UpdateAllowedContract$_load(slice sc_0) inline;

;; $UNftCollection$_store
builder $UNftCollection$_store(builder build_0, ((int, int, slice), slice, slice, slice, cell, slice) v) inline;

;; $UNftCollection$_load
(slice, (((int, int, slice), slice, slice, slice, cell, slice))) $UNftCollection$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $CollectionData$_to_external
(int, cell, slice) $CollectionData$_to_external(((int, cell, slice)) v) inline;

;; $UNftItem$init$_store
builder $UNftItem$init$_store(builder build_0, (slice, slice, int, cell, (int, int, slice)) v) inline;

;; $UNftCollection$init$_load
(slice, ((slice, slice, (int, int, slice)))) $UNftCollection$init$_load(slice sc_0) inline;

;; $UNftCollection$_contract_init
((int, int, slice), slice, slice, slice, cell, slice) $UNftCollection$_contract_init(slice $collection_uri, slice $protocol_address, (int, int, slice) $default_royalty_params) impure inline_ref;

;; $UNftCollection$_contract_load
((int, int, slice), slice, slice, slice, cell, slice) $UNftCollection$_contract_load() impure inline_ref;

;; $UNftCollection$_contract_store
() $UNftCollection$_contract_store(((int, int, slice), slice, slice, slice, cell, slice) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $PriceRangeConfig$_constructor_start_end
((int, int)) $PriceRangeConfig$_constructor_start_end(int start, int end) inline;

;; $global_getPriceRangeConfig
(int, int) $global_getPriceRangeConfig(int $username_length) impure inline;

;; $global_getUsernamePrice
int $global_getUsernamePrice(int $len, int $current_time) impure inline;

;; $String$_fun_asComment
cell $String$_fun_asComment(slice $self) impure inline_ref;

;; $UNftItem$_init_child
(cell, cell) $UNftItem$_init_child(cell sys', slice $collection_address, slice $owner, int $index, cell $individual_content, (int, int, slice) $royalty) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int query_id) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $UNftCollection$_fun_username_link_status
(((int, int, slice), slice, slice, slice, cell, slice), int) $UNftCollection$_fun_username_link_status(((int, int, slice), slice, slice, slice, cell, slice) $self, slice $username) impure inline_ref;

;; $UNftCollection$_fun_get_username_hash
(((int, int, slice), slice, slice, slice, cell, slice), int) $UNftCollection$_fun_get_username_hash(((int, int, slice), slice, slice, slice, cell, slice) $self, slice $username) impure inline_ref;

;; $UNftCollection$_fun_forward
(((int, int, slice), slice, slice, slice, cell, slice), ()) $UNftCollection$_fun_forward(((int, int, slice), slice, slice, slice, cell, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $UNftCollection$_fun_notify
(((int, int, slice), slice, slice, slice, cell, slice), ()) $UNftCollection$_fun_notify(((int, int, slice), slice, slice, slice, cell, slice) $self, cell $body) impure inline;

;; $ReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination
((int, int, int, slice)) $ReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination(int query_id, int numerator, int denominator, slice destination) inline;

;; $UNftCollection$_fun_getRoyaltyParams
(((int, int, slice), slice, slice, slice, cell, slice), ()) $UNftCollection$_fun_getRoyaltyParams(((int, int, slice), slice, slice, slice, cell, slice) $self, (int, slice, int, slice) $ctx, (int) $msg) impure inline;

;; $UNftCollection$_fun_getNftItemInit
(((int, int, slice), slice, slice, slice, cell, slice), (cell, cell)) $UNftCollection$_fun_getNftItemInit(((int, int, slice), slice, slice, slice, cell, slice) $self, int $item_index) impure inline;

;; $CollectionData$_constructor_next_item_index_collection_content_owner_address
((int, cell, slice)) $CollectionData$_constructor_next_item_index_collection_content_owner_address(int next_item_index, cell collection_content, slice owner_address) inline;

;; $UNftCollection$_fun_getCollectionData
(((int, int, slice), slice, slice, slice, cell, slice), (int, cell, slice)) $UNftCollection$_fun_getCollectionData(((int, int, slice), slice, slice, slice, cell, slice) $self) impure inline;

;; $UNftCollection$_fun_getNFTContent
(((int, int, slice), slice, slice, slice, cell, slice), cell) $UNftCollection$_fun_getNFTContent(((int, int, slice), slice, slice, slice, cell, slice) $self, cell $individual_content) impure inline;

;; $UNftCollection$_fun_get_nft_content
(((int, int, slice), slice, slice, slice, cell, slice), cell) $UNftCollection$_fun_get_nft_content(((int, int, slice), slice, slice, slice, cell, slice) $self, int $item_index, cell $individual_content) impure inline_ref;

;; $UNftCollection$_fun_get_collection_data
(((int, int, slice), slice, slice, slice, cell, slice), (int, cell, slice)) $UNftCollection$_fun_get_collection_data(((int, int, slice), slice, slice, slice, cell, slice) $self) impure inline_ref;

;; $UNftCollection$_fun_get_nft_address_by_index
(((int, int, slice), slice, slice, slice, cell, slice), slice) $UNftCollection$_fun_get_nft_address_by_index(((int, int, slice), slice, slice, slice, cell, slice) $self, int $item_index) impure inline_ref;

;; $UNftCollection$_fun_get_allowed_contract
(((int, int, slice), slice, slice, slice, cell, slice), slice) $UNftCollection$_fun_get_allowed_contract(((int, int, slice), slice, slice, slice, cell, slice) $self) impure inline_ref;

;; $UNftCollection$_fun_get_username_price
(((int, int, slice), slice, slice, slice, cell, slice), int) $UNftCollection$_fun_get_username_price(((int, int, slice), slice, slice, slice, cell, slice) $self, slice $username) impure inline_ref;

;; $ReportCardLinkStatus$_constructor_query_id_is_linked_to_card_item_index_initiator_payload
((int, int, int, slice, cell)) $ReportCardLinkStatus$_constructor_query_id_is_linked_to_card_item_index_initiator_payload(int query_id, int is_linked_to_card, int item_index, slice initiator, cell payload) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
