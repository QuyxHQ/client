#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_CNftCollection.headers.fc";
#include "tact_CNftCollection.stdlib.fc";
#include "tact_CNftCollection.native.fc";
#include "tact_CNftCollection.constants.fc";
#include "tact_CNftCollection.storage.fc";

;;
;; Contract CNftCollection functions
;;

(slice, int, slice, slice) $CNftCollection$_contract_init(slice $collection_uri) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = (null(), 0, null(), null());
    $self'collection_uri = $collection_uri;
    $self'owner = __tact_context_get_sender();
    return ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract);
}

((slice, int, slice, slice), int) $CNftCollection$_fun_estimateRestValue((slice, int, slice, slice) $self, (int, slice, int, slice) $ctx) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    var (($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw)) = $ctx;
    int $rest_value = $ctx'value;
    int $balance_before = (__tact_my_balance() - $rest_value);
    int $storage_fee = (50000000 - min($balance_before, 50000000));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ($rest_value - ($storage_fee + 50000000)));
}

((slice, int, slice, slice), (cell, cell)) $CNftCollection$_fun_getNftItemInit((slice, int, slice, slice) $self, int $item_index) impure inline {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    tuple $builder = __tact_string_builder_start_string();
    $builder~__tact_string_builder_append($self'collection_uri);
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), $CNftItem$_init_child(__tact_context_sys, my_address(), $self'owner, $item_index, __tact_string_builder_end($builder)));
}

((slice, int, slice, slice), (int, cell, slice)) $CNftCollection$_fun_getCollectionData((slice, int, slice, slice) $self) impure inline {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    tuple $builder = __tact_string_builder_start_string();
    $builder~__tact_string_builder_append($self'collection_uri);
    $builder~__tact_string_builder_append(__gen_slice_string_61c21407730de125092b19eef22b39a85d19867c7538f9fc3e9417e817a9ab68());
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), $CollectionData$_constructor_next_item_index_collection_content_owner_address($self'next_item_index, __tact_string_builder_end($builder), $self'owner));
}

((slice, int, slice, slice), cell) $CNftCollection$_fun_getNFTContent((slice, int, slice, slice) $self, cell $individual_content) impure inline {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), $individual_content);
}

((slice, int, slice, slice), cell) $CNftCollection$_fun_get_nft_content((slice, int, slice, slice) $self, int $item_index, cell $individual_content) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_getNFTContent($individual_content));
}

((slice, int, slice, slice), (int, cell, slice)) $CNftCollection$_fun_get_collection_data((slice, int, slice, slice) $self) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_getCollectionData());
}

((slice, int, slice, slice), slice) $CNftCollection$_fun_get_nft_address_by_index((slice, int, slice, slice) $self, int $item_index) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    var ($state_init'code, $state_init'data) = ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_getNftItemInit($item_index);
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), $global_contractAddress(($state_init'code, $state_init'data)));
}

((slice, int, slice, slice), slice) $CNftCollection$_fun_get_allowed_contract((slice, int, slice, slice) $self) impure inline_ref {
    var (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)) = $self;
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), (null?($self'allowed_contract) ? __tact_create_address(0, 0) : __tact_not_null($self'allowed_contract)));
}

;;
;; Receivers of a Contract CNftCollection
;;

(((slice, int, slice, slice)), ()) %$CNftCollection$_internal_empty((slice, int, slice, slice) $self) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    throw_unless(401, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'owner) ));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_UpdateAllowedContract((slice, int, slice, slice) $self, (slice) $msg) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($msg'allowed_contract) = $msg;
    throw_unless(401, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'owner) ));
    $self'allowed_contract = $msg'allowed_contract;
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_MintCard((slice, int, slice, slice) $self, (int, slice, slice, slice) $msg) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($msg'query_id, $msg'username_address, $msg'bio, $msg'pfp) = $msg;
    cell $payload = end_cell(store_ref(store_ref(store_ref(begin_cell(), $global_emptyCell()), $String$_fun_asComment($msg'pfp)), $String$_fun_asComment($msg'bio)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($msg'username_address, 0, (2 + 64), false, $GetUsernameData$_store_cell($GetUsernameData$_constructor_query_id_initiator_payload($msg'query_id, __tact_context_get_sender(), $payload))));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_ReportUsernameData((slice, int, slice, slice) $self, (int, int, cell, slice, cell) $msg) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($msg'query_id, $msg'item_index, $msg'token_name, $msg'initiator, $msg'payload) = $msg;
    throw_unless(400, (~ null?($self'allowed_contract)));
    throw_unless(401, ( __tact_slice_eq_bits(__tact_context_get_sender(), __tact_not_null($self'allowed_contract)) ));
    cell $incomingPayload = $msg'payload;
    slice $incomingPayloadSlice = begin_parse($incomingPayload);
    cell $payload = end_cell(store_ref(store_ref(store_ref(begin_cell(), $msg'token_name), $incomingPayloadSlice~load_ref()), $incomingPayloadSlice~load_ref()));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body(__tact_not_null($self'allowed_contract), 0, (2 + 64), false, $GetCardLinkStatus$_store_cell($GetCardLinkStatus$_constructor_query_id_item_index_initiator_payload($msg'query_id, $msg'item_index, $msg'initiator, $payload))));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_ReportCardLinkStatus((slice, int, slice, slice) $self, (int, int, int, slice, cell) $msg) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($msg'query_id, $msg'item_index, $msg'is_linked_to_card, $msg'initiator, $msg'payload) = $msg;
    throw_unless(400, (~ null?($self'allowed_contract)));
    throw_unless(401, ( __tact_slice_eq_bits(__tact_context_get_sender(), __tact_not_null($self'allowed_contract)) ));
    throw_unless(400, (~ null?($msg'is_linked_to_card)));
    throw_unless(400, (~ __tact_not_null($msg'is_linked_to_card)));
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($state_init'code, $state_init'data) = ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_getNftItemInit($self'next_item_index);
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body_code_data($global_contractAddress(($state_init'code, $state_init'data)), ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_estimateRestValue($Context$_tensor_cast(($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw))), (2 + 64), false, $Initialize$_store_cell($Initialize$_constructor_query_id_new_owner_response_destination_authority_payload(0, $msg'initiator, $msg'initiator, $self'owner, $msg'payload)), $state_init'code, $state_init'data));
    $global_send($SendParameters$_constructor_to_value_mode_body(__tact_not_null($self'allowed_contract), 0, (2 + 64), $UpdateUsernameLinkedStatus$_store_cell($UpdateUsernameLinkedStatus$_constructor_query_id_initiator_index_status($msg'query_id, $msg'initiator, $msg'item_index, false))));
    $self'next_item_index = ($self'next_item_index + 1);
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_UnlinkCard((slice, int, slice, slice) $self, (int, int, slice) $msg) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($msg'query_id, $msg'index, $msg'initiator) = $msg;
    throw_unless(400, (~ null?($self'allowed_contract)));
    throw_unless(401, ( __tact_slice_eq_bits(__tact_context_get_sender(), $global_contractAddress(($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_getNftItemInit($msg'index))) ));
    $global_send($SendParameters$_constructor_to_value_mode_body(__tact_not_null($self'allowed_contract), 0, (2 + 64), $UpdateUsernameLinkedStatus$_store_cell($UpdateUsernameLinkedStatus$_constructor_query_id_initiator_index_status($msg'query_id, $msg'initiator, $msg'index, false))));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

(((slice, int, slice, slice)), ()) $CNftCollection$_internal_binary_Deploy((slice, int, slice, slice) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract)~$CNftCollection$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'next_item_index, $self'collection_uri, $self'allowed_contract), ());
}

;;
;; Get methods of a Contract CNftCollection
;;

_ %get_nft_content(int $$item_index, cell $$individual_content) method_id(68445) {
    int $item_index = $$item_index;
    cell $individual_content = $$individual_content;
    var self = $CNftCollection$_contract_load();
    var res = self~$CNftCollection$_fun_get_nft_content($item_index, $individual_content);
    return res;
}

_ %get_collection_data() method_id(102491) {
    var self = $CNftCollection$_contract_load();
    var res = self~$CNftCollection$_fun_get_collection_data();
    return $CollectionData$_to_external(res);
}

_ %get_nft_address_by_index(int $$item_index) method_id(92067) {
    int $item_index = $$item_index;
    var self = $CNftCollection$_contract_load();
    var res = self~$CNftCollection$_fun_get_nft_address_by_index($item_index);
    return res;
}

_ %get_allowed_contract() method_id(129339) {
    var self = $CNftCollection$_contract_load();
    var res = self~$CNftCollection$_fun_get_allowed_contract();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmRU8LxN7N4CbRTuYC8MPKhzKconBP37jf7wSCBQH5RrSw";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract CNftCollection
;;

((slice, int, slice, slice), int) $CNftCollection$_contract_router_internal((slice, int, slice, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$CNftCollection$_internal_empty();
        return (self, true);
    }
    
    ;; Receive UpdateAllowedContract message
    if (op == 3161124927) {
        var msg = in_msg~$UpdateAllowedContract$_load();
        self~$CNftCollection$_internal_binary_UpdateAllowedContract(msg);
        return (self, true);
    }
    
    ;; Receive MintCard message
    if (op == 425813829) {
        var msg = in_msg~$MintCard$_load();
        self~$CNftCollection$_internal_binary_MintCard(msg);
        return (self, true);
    }
    
    ;; Receive ReportUsernameData message
    if (op == 1224717995) {
        var msg = in_msg~$ReportUsernameData$_load();
        self~$CNftCollection$_internal_binary_ReportUsernameData(msg);
        return (self, true);
    }
    
    ;; Receive ReportCardLinkStatus message
    if (op == 1646771514) {
        var msg = in_msg~$ReportCardLinkStatus$_load();
        self~$CNftCollection$_internal_binary_ReportCardLinkStatus(msg);
        return (self, true);
    }
    
    ;; Receive UnlinkCard message
    if (op == 1323911271) {
        var msg = in_msg~$UnlinkCard$_load();
        self~$CNftCollection$_internal_binary_UnlinkCard(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$CNftCollection$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $CNftCollection$_contract_load();
    
    ;; Handle operation
    int handled = self~$CNftCollection$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $CNftCollection$_contract_store(self);
}
