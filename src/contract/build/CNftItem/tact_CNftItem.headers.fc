;;
;; Header files for CNftItem
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Transfer$_load
(slice, ((int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetStaticData$_load
(slice, ((int))) $GetStaticData$_load(slice sc_0) inline;

;; $ReportStaticData$_store
builder $ReportStaticData$_store(builder build_0, (int, int, slice) v) inline;

;; $ReportStaticData$_store_cell
cell $ReportStaticData$_store_cell((int, int, slice) v) inline;

;; $UnlinkCard$_store
builder $UnlinkCard$_store(builder build_0, (int, int, slice) v) inline;

;; $UnlinkCard$_store_cell
cell $UnlinkCard$_store_cell((int, int, slice) v) inline;

;; $Initialize$_load
(slice, ((int, slice, slice, slice, cell))) $Initialize$_load(slice sc_0) inline;

;; $ProveOwnership$_load
(slice, ((int, slice, cell, int))) $ProveOwnership$_load(slice sc_0) inline;

;; $OwnershipProof$_store
builder $OwnershipProof$_store(builder build_0, (int, int, slice, cell, int, cell) v) inline_ref;

;; $OwnershipProof$_store_cell
cell $OwnershipProof$_store_cell((int, int, slice, cell, int, cell) v) inline;

;; $RequestOwner$_load
(slice, ((int, slice, cell, int))) $RequestOwner$_load(slice sc_0) inline;

;; $OwnerInfo$_store
builder $OwnerInfo$_store(builder build_0, (int, int, slice, slice, cell, int, cell) v) inline_ref;

;; $OwnerInfo$_store_cell
cell $OwnerInfo$_store_cell((int, int, slice, slice, cell, int, cell) v) inline;

;; $Destroy$_load
(slice, ((int))) $Destroy$_load(slice sc_0) inline;

;; $Revoke$_load
(slice, ((int))) $Revoke$_load(slice sc_0) inline;

;; $CNftItem$_store
builder $CNftItem$_store(builder build_0, (slice, int, slice, slice, cell, int, int, cell, cell, cell) v) inline;

;; $CNftItem$_load
(slice, ((slice, int, slice, slice, cell, int, int, cell, cell, cell))) $CNftItem$_load(slice sc_0) inline;

;; $ItemData$_to_external
(int, int, slice, slice, cell) $ItemData$_to_external(((int, int, slice, slice, cell)) v) inline;

;; $CardMetadata$_not_null
((cell, cell, cell)) $CardMetadata$_not_null(tuple v) inline;

;; $CardMetadata$_as_optional
tuple $CardMetadata$_as_optional((cell, cell, cell) v) inline;

;; $CardMetadata$_to_tuple
tuple $CardMetadata$_to_tuple(((cell, cell, cell)) v) inline;

;; $CardMetadata$_to_opt_tuple
tuple $CardMetadata$_to_opt_tuple(tuple v) inline;

;; $CardMetadata$_to_opt_external
tuple $CardMetadata$_to_opt_external(tuple v) inline;

;; $CNftItem$init$_load
(slice, ((slice, slice, int, cell))) $CNftItem$init$_load(slice sc_0) inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $CNftItem$_contract_init
(slice, int, slice, slice, cell, int, int, cell, cell, cell) $CNftItem$_contract_init(slice $collection_address, slice $owner, int $index, cell $individual_content) impure inline_ref;

;; $CNftItem$_contract_load
(slice, int, slice, slice, cell, int, int, cell, cell, cell) $CNftItem$_contract_load() impure inline_ref;

;; $CNftItem$_contract_store
() $CNftItem$_contract_store((slice, int, slice, slice, cell, int, int, cell, cell, cell) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $CNftItem$_fun_getOwner
((slice, int, slice, slice, cell, int, int, cell, cell, cell), slice) $CNftItem$_fun_getOwner((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int query_id) inline;

;; $CNftItem$_fun_initialize
((slice, int, slice, slice, cell, int, int, cell, cell, cell), ()) $CNftItem$_fun_initialize((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self, (int, slice, int, slice) $ctx, (int, slice, slice, slice, cell) $msg) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $ReportStaticData$_constructor_query_id_index_collection
((int, int, slice)) $ReportStaticData$_constructor_query_id_index_collection(int query_id, int index, slice collection) inline;

;; $CNftItem$_fun_reportStaticData
((slice, int, slice, slice, cell, int, int, cell, cell, cell), ()) $CNftItem$_fun_reportStaticData((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self, (int) $msg) impure inline;

;; $OwnershipProof$_constructor_query_id_item_id_owner_data_revoked_at_content
((int, int, slice, cell, int, cell)) $OwnershipProof$_constructor_query_id_item_id_owner_data_revoked_at_content(int query_id, int item_id, slice owner, cell data, int revoked_at, cell content) inline;

;; $CNftItem$_fun_proveOwnership
((slice, int, slice, slice, cell, int, int, cell, cell, cell), ()) $CNftItem$_fun_proveOwnership((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self, (int, slice, cell, int) $msg) impure inline;

;; $OwnerInfo$_constructor_query_id_item_id_initiator_owner_data_revoked_at_content
((int, int, slice, slice, cell, int, cell)) $OwnerInfo$_constructor_query_id_item_id_initiator_owner_data_revoked_at_content(int query_id, int item_id, slice initiator, slice owner, cell data, int revoked_at, cell content) inline;

;; $CNftItem$_fun_requestOwner
((slice, int, slice, slice, cell, int, int, cell, cell, cell), ()) $CNftItem$_fun_requestOwner((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self, (int, slice, cell, int) $msg) impure inline;

;; $ItemData$_constructor_is_initialized_index_collection_address_owner_address_individual_content
((int, int, slice, slice, cell)) $ItemData$_constructor_is_initialized_index_collection_address_owner_address_individual_content(int is_initialized, int index, slice collection_address, slice owner_address, cell individual_content) inline;

;; $CNftItem$_fun_getNFTData
((slice, int, slice, slice, cell, int, int, cell, cell, cell), (int, int, slice, slice, cell)) $CNftItem$_fun_getNFTData((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline;

;; $CardMetadata$_constructor_username_pfp_bio
((cell, cell, cell)) $CardMetadata$_constructor_username_pfp_bio(cell username, cell pfp, cell bio) inline;

;; $CNftItem$_fun_get_metadata
((slice, int, slice, slice, cell, int, int, cell, cell, cell), tuple) $CNftItem$_fun_get_metadata((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline_ref;

;; $CNftItem$_fun_get_nft_data
((slice, int, slice, slice, cell, int, int, cell, cell, cell), (int, int, slice, slice, cell)) $CNftItem$_fun_get_nft_data((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline_ref;

;; $CNftItem$_fun_get_authority_address
((slice, int, slice, slice, cell, int, int, cell, cell, cell), slice) $CNftItem$_fun_get_authority_address((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline_ref;

;; $CNftItem$_fun_get_revoked_time
((slice, int, slice, slice, cell, int, int, cell, cell, cell), int) $CNftItem$_fun_get_revoked_time((slice, int, slice, slice, cell, int, int, cell, cell, cell) $self) impure inline_ref;

;; $UnlinkCard$_constructor_query_id_initiator_index
((int, int, slice)) $UnlinkCard$_constructor_query_id_initiator_index(int query_id, slice initiator, int index) inline;
